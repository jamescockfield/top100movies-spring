plugins {
	id 'org.springframework.boot' version '3.0.0-M4'
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	id 'java'
	id 'checkstyle'
	id 'com.diffplug.spotless' version '6.10.0'
	id "io.freefair.lombok" version "6.5.0.3"
}

group = 'com.james'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '18'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '3.0.0-M4'
	implementation group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: '3.0.0-M4'
	implementation group: 'org.springframework.security', name: 'spring-security-config', version: '6.0.0-M6'
	implementation group: 'org.springframework.security', name: 'spring-security-web', version: '6.0.0-M6'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	implementation group: 'jakarta.persistence', name: 'jakarta.persistence-api', version: '3.1.0'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '3.0.0-M4'
	implementation group: 'com.h2database', name: 'h2', version: '2.1.214'

// https://mvnrepository.com/artifact/org.springframework/spring-test
testImplementation 'org.springframework:spring-test:6.0.0-M5'

	testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: '6.0.0-M6'
	testImplementation group: 'org.springframework.boot', name :'spring-boot-starter-test', version :'3.0.0-M4'

	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-orgjson', version: '0.11.5'
}

tasks.withType(Test) {
	  useJUnitPlatform()
}

sourceSets {
    // test {
    //     resources.srcDirs = ["$projectDir/src/test/resources"] // TODO: check if this fixes conf issue
    // }
    integrationTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly 
}

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

spotless {
	java {
		googleJavaFormat()
	}
}

checkstyle {
	toolVersion '10.3.2'
}

check.dependsOn 'spotlessCheck'

task installPreCommitHook() {
	def file = new File(projectDir, '.git/hooks/pre-commit')
	file.text = "#!/bin/sh\n./gradlew check"
	file.setExecutable(true)
}
build.dependsOn 'installPreCommitHook'
